{"hash":"55af111bd0cf98ff37657aa7f4ee0c6f7b28fd11","data":{"post":{"id":"7a4a1c34021ea3850ef0f1d5679a4f1d","title":"Css Priority 筆記","content":"<h1 id=\"css-priority-筆記\"><a href=\"#css-priority-%E7%AD%86%E8%A8%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Css Priority 筆記</h1>\n<h2 id=\"css-樣式優先權\"><a href=\"#css-%E6%A8%A3%E5%BC%8F%E5%84%AA%E5%85%88%E6%AC%8A\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Css 樣式優先權</h2>\n<p><strong>元素標籤內設定>style 標籤內樣式設定 > link檔案樣式設定 >= import檔案樣式設定</strong><br>\nlink檔案樣式設定理論與import檔案樣式設定相同，但大部分瀏覽器都會給予link檔案設定較高優先權</p>\n<p><strong>同層級的優先權 先後順序為由上到下</strong></p>\n<p>範例：\n透過不同方法將這段程式碼中的字體改變顏色</p>\n<pre class=\"language-HTML\"><code class=\"language-HTML\"><p class=\"message\" id=\"introduction\">\n  ..........\n </p></code></pre>\n<p>1.利用tag name 的方式修改字體顏色</p>\n<pre class=\"language-Css\"><code class=\"language-Css\">    p {color:blue;}</code></pre>\n<p>2.利用class name 的方式進行修改</p>\n<pre class=\"language-Css\"><code class=\"language-Css\">    .message {color :green ;}</code></pre>\n<p>3.透過ㄛid的方式進行修改</p>\n<pre class=\"language-Css\"><code class=\"language-Css\">    #introduction {color :red}</code></pre>\n<h2 id=\"如何在開發的過程中避免衝突\"><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E9%96%8B%E7%99%BC%E7%9A%84%E9%81%8E%E7%A8%8B%E4%B8%AD%E9%81%BF%E5%85%8D%E8%A1%9D%E7%AA%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>如何在開發的過程中避免衝突</h2>\n<ul>\n<li>Only use classes: use .introduction instead of #introduction.</li>\n<li>Avoid applying multiple classes on a single HTML element:\ndon’t write\n<code>&#x3C;p class=\"big red important\"></code>\nbut rather<br>\n<code>&#x3C;p class=\"title\"></code>\nwhich is more semantically descriptive  </li>\n<li>Don’t use inline styles like <div style=\"background: blue;\"></li>\n</ul>\n","date":"7 January 2019","timeToRead":1,"description":"Css Priority 樣式優先權","tags":[{"id":"CSS","title":"CSS","path":"/tag/CSS/"}]}},"context":{}}